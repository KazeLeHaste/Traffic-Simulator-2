import { Router } from '../core/Router';
import { appState } from '../core/AppState';

/**
 * Home page - landing page for the traffic simulator
 */
export class HomePage {
  private container: HTMLElement;
  private router: Router;
  private recentLayouts: any[] = [];

  constructor(container: HTMLElement, router: Router) {
    this.container = container;
    this.router = router;
    this.init();
  }

  private async init() {
    console.log('üè† [HOME] Initializing home page');
    
    // Ensure container is empty
    if (this.container) {
      this.container.innerHTML = '';
    }
    
    // Load recent layouts to display on homepage
    try {
      this.recentLayouts = await appState.storage.loadAllLayouts();
      // Sort by last modified date
      this.recentLayouts.sort((a, b) => {
        const dateA = new Date(a.updatedAt || a.createdAt).getTime();
        const dateB = new Date(b.updatedAt || b.createdAt).getTime();
        return dateB - dateA; // Sort descending (newest first)
      });
      // Take only the most recent 3
      this.recentLayouts = this.recentLayouts.slice(0, 3);
      console.log(`üè† [HOME] Loaded ${this.recentLayouts.length} recent layouts`);
    } catch (error) {
      console.error('Failed to load recent layouts:', error);
      this.recentLayouts = [];
    }
    
    console.log('üè† [HOME] Rendering home page content');
    this.render();
    
    // Use setTimeout to ensure DOM is fully rendered before attaching events
    setTimeout(() => {
      console.log('üè† [HOME] Setting up event listeners');
      this.addEventListeners();
    }, 100);
  }
  
  private addEventListeners() {
    console.log('Adding event listeners to home page buttons');
    
    // Navigation buttons
    const builderBtn = document.getElementById('go-to-builder');
    if (builderBtn) {
      console.log('Found builder button, attaching click event');
      builderBtn.addEventListener('click', () => {
        console.log('Builder button clicked, navigating...');
        this.router.navigate('/builder');
      });
    } else {
      console.warn('Builder button not found in the DOM');
    }
    
    const simulationBtn = document.getElementById('go-to-simulation');
    if (simulationBtn) {
      console.log('Found simulation button, attaching click event');
      simulationBtn.addEventListener('click', () => {
        console.log('Simulation button clicked, navigating...');
        this.router.navigate('/simulation');
      });
    } else {
      console.warn('Simulation button not found in the DOM');
    }
    
    // Recent layout buttons
    const layoutButtons = document.querySelectorAll('[data-action="load-layout"]');
    console.log(`Found ${layoutButtons.length} layout buttons`);
    
    layoutButtons.forEach(btn => {
      const layoutId = btn.getAttribute('data-layout-id');
      const target = btn.getAttribute('data-target');
      console.log(`Adding event listener to button for layout ${layoutId} with target ${target}`);
      
      btn.addEventListener('click', (e) => {
        e.preventDefault(); // Prevent any default behavior
        const clickedBtn = e.currentTarget as HTMLElement;
        const layoutId = clickedBtn.getAttribute('data-layout-id');
        const target = clickedBtn.getAttribute('data-target');
        
        if (layoutId && target) {
          console.log(`Layout button clicked! Loading layout ${layoutId} and navigating to ${target}`);
          // Store the layout ID to be loaded
          appState.selectedLayoutId = layoutId;
          // Navigate to the appropriate page after a brief delay to allow console log to appear
          setTimeout(() => {
            this.router.navigate(`/${target}`);
          }, 100);
        } else {
          console.error('Missing layout ID or target in clicked button:', clickedBtn);
        }
      });
    });
    
    // Traffic control model tabs
    const tabButtons = document.querySelectorAll('.tab-btn');
    tabButtons.forEach(tab => {
      tab.addEventListener('click', () => {
        // Get the target content id
        const targetId = tab.getAttribute('data-target');
        if (!targetId) return;
        
        // Hide all content sections
        const allContents = document.querySelectorAll('.model-content');
        allContents.forEach(content => {
          content.classList.remove('active');
        });
        
        // Deactivate all tabs
        tabButtons.forEach(t => {
          t.classList.remove('active');
        });
        
        // Activate clicked tab and show corresponding content
        tab.classList.add('active');
        const targetContent = document.getElementById(targetId);
        if (targetContent) {
          targetContent.classList.add('active');
        }
      });
    });
    
    // Modal popup functionality for "Learn More" buttons
    this.setupModalPopups();
  }
  
  private setupModalPopups() {
    const modalOverlay = document.getElementById('modal-overlay');
    const modalBody = document.getElementById('modal-body');
    const closeModal = document.querySelector('.close-modal');
    const learnMoreButtons = document.querySelectorAll('.learn-more-btn');
    
    if (!modalOverlay || !modalBody || !closeModal) {
      console.error('Modal elements not found in DOM');
      return;
    }
    
    console.log(`Setting up ${learnMoreButtons.length} modal buttons`);
    
    // Open modal when Learn More is clicked
    learnMoreButtons.forEach(btn => {
      btn.addEventListener('click', () => {
        const modalId = btn.getAttribute('data-modal-id');
        if (!modalId) return;
        
        const modalContent = document.getElementById(modalId);
        if (modalContent) {
          // Copy content to modal
          modalBody.innerHTML = modalContent.innerHTML;
          
          // Show modal
          modalOverlay.style.display = 'flex';
          document.body.classList.add('modal-open');
        }
      });
    });
    
    // Close modal when X is clicked
    closeModal.addEventListener('click', () => {
      modalOverlay.style.display = 'none';
      document.body.classList.remove('modal-open');
    });
    
    // Close modal when clicking outside content
    modalOverlay.addEventListener('click', (e) => {
      if (e.target === modalOverlay) {
        modalOverlay.style.display = 'none';
        document.body.classList.remove('modal-open');
      }
    });
    
    // Close modal with ESC key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && modalOverlay.style.display === 'flex') {
        modalOverlay.style.display = 'none';
        document.body.classList.remove('modal-open');
      }
    });
  }

  private render() {
    this.container.innerHTML = `
      <div class="home-page" id="home-page-content">
        <div class="hero-section">
          <div class="hero-content">
            <h1>Road Traffic Simulator</h1>
            <p class="hero-subtitle">Professional Traffic Management & Analysis Tool for Traffic Management Offices</p>
            
            <div class="action-buttons-container">
              <button class="btn btn-primary btn-lg" id="go-to-builder">
                Build Network
              </button>
              <button class="btn btn-secondary btn-lg" id="go-to-simulation">
                Run Simulation
              </button>
            </div>
          </div>
        </div>
        
        <!-- Recent Layouts Section -->
        <div class="recent-section">
          <div class="section-content">
            <h2>Recent Layouts</h2>
            
            <div class="recent-layouts">
              ${this.recentLayouts.length > 0 ? 
                this.recentLayouts.map(layout => `
                  <div class="layout-card">
                    <div class="layout-info">
                      <h4>${layout.name || 'Unnamed Layout'}</h4>
                      <p>Last modified: ${new Date(layout.updatedAt || layout.createdAt).toLocaleString()}</p>
                    </div>
                    <div class="layout-actions">
                      <button class="btn btn-primary btn-sm" data-action="load-layout" data-layout-id="${layout.id}" data-target="builder">
                        üèóÔ∏è Edit
                      </button>
                      <button class="btn btn-secondary btn-sm" data-action="load-layout" data-layout-id="${layout.id}" data-target="simulation">
                        üöó Simulate
                      </button>
                    </div>
                  </div>
                `).join('') 
                : 
                `<div class="empty-state">
                  <div class="empty-icon">üìÑ</div>
                  <p>No layouts found</p>
                  <small>Head to the Builder to create your first layout!</small>
                </div>`
              }
            </div>
          </div>
        </div>
        
        <!-- Core System Modules -->
        <div class="modules-section">
          <div class="section-content">
            <h2>Core System Modules</h2>
            
            <div class="module-grid">
              <div class="module-card">
                <div class="module-icon">üß†</div>
                <h3>Core Simulation Engine</h3>
                <p>The brain of the system that drives realistic traffic behavior</p>
                <button class="learn-more-btn" data-modal-id="simulation-engine-modal">Learn More</button>
              </div>
              
              <div class="module-card">
                <div class="module-icon">üö¶</div>
                <h3>Traffic Control Layer</h3>
                <p>Intelligent traffic management strategies for optimal flow</p>
                <button class="learn-more-btn" data-modal-id="traffic-control-modal">Learn More</button>
              </div>
              
              <div class="module-card">
                <div class="module-icon">üìä</div>
                <h3>Analytics Layer</h3>
                <p>Comprehensive metrics tracking and performance analysis</p>
                <button class="learn-more-btn" data-modal-id="analytics-modal">Learn More</button>
              </div>
              
              <div class="module-card">
                <div class="module-icon">üóÇÔ∏è</div>
                <h3>Storage Layer</h3>
                <p>Save, load, and share your traffic scenarios and results</p>
                <button class="learn-more-btn" data-modal-id="storage-modal">Learn More</button>
              </div>
              
              <!-- Hidden modal content that will be displayed in popups -->
              <div id="simulation-engine-modal" class="modal-data" style="display: none;">
                <h3>Core Simulation Engine</h3>
                <p>The simulation engine models realistic vehicle behavior using:</p>
                <ul>
                  <li><strong>Physics-based Movement:</strong> Acceleration, deceleration, and turning dynamics</li>
                  <li><strong>Vehicle Interaction:</strong> Collision avoidance and following behavior</li>
                  <li><strong>Traffic Rules:</strong> Lane discipline, intersection protocols, and signal compliance</li>
                </ul>
                <p>The engine processes approximately 60 updates per second to ensure smooth simulation with accurate representation of traffic flow dynamics.</p>
              </div>
              
              <div id="traffic-control-modal" class="modal-data" style="display: none;">
                <h3>Traffic Control Layer</h3>
                <p>The Traffic Control Layer implements three distinct strategies:</p>
                <ul>
                  <li><strong>Fixed Timing:</strong> Predictable, cyclic signal patterns</li>
                  <li><strong>Adaptive Timing:</strong> Responsive to traffic conditions</li>
                  <li><strong>Traffic Enforcer:</strong> AI-driven decision making</li>
                </ul>
                <p>Each strategy can be applied to individual intersections or globally across the network, allowing for mixed-mode operations that mirror real-world implementations.</p>
              </div>
              
              <div id="analytics-modal" class="modal-data" style="display: none;">
                <h3>Analytics Layer</h3>
                <p>Our robust analytics system tracks key performance indicators including:</p>
                <ul>
                  <li><strong>Traffic Flow Metrics:</strong> Speed, throughput, wait times</li>
                  <li><strong>Congestion Analysis:</strong> Queue lengths, density metrics</li>
                  <li><strong>Environmental Impact:</strong> Emissions modeling and fuel consumption</li>
                  <li><strong>Level of Service:</strong> Industry-standard A-F grading for road segments</li>
                </ul>
                <p>Data collection occurs in real-time without impacting simulation performance, providing accurate insights for optimization.</p>
              </div>
              
              <div id="storage-modal" class="modal-data" style="display: none;">
                <h3>Storage Layer</h3>
                <p>The storage system provides versatile data management:</p>
                <ul>
                  <li><strong>Scenario Management:</strong> Save and load network layouts</li>
                  <li><strong>Results Export:</strong> CSV and JSON export for analysis in external tools</li>
                  <li><strong>Historical Comparison:</strong> Track improvements across iterations</li>
                  <li><strong>Benchmark Storage:</strong> Save performance metrics for future reference</li>
                </ul>
                <p>All data is stored securely and can be easily transferred between users for collaborative work.</p>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Traffic Control Models -->
        <div class="control-models-section">
          <div class="section-content">
            <h2>Traffic Control Models</h2>
            <p class="section-description">Understanding the three traffic control strategies available in the simulator</p>
            
            <div class="control-model-container">
              <div class="model-tabs">
                <button class="tab-btn active" data-target="fixed-timing">Fixed Timing</button>
                <button class="tab-btn" data-target="adaptive-timing">Adaptive Timing</button>
                <button class="tab-btn" data-target="traffic-enforcer">Traffic Enforcer</button>
              </div>
              
              <div class="model-content active" id="fixed-timing">
                <h4>Fixed Timing Strategy</h4>
                <div class="model-icon">‚è±Ô∏è</div>
                <p>The Fixed Timing strategy uses predetermined signal cycles with consistent phase durations, similar to traditional traffic lights used in stable, predictable traffic environments.</p>
                
                <div class="model-details">
                  <div class="detail-section">
                    <h5>How It Works</h5>
                    <ul>
                      <li>Cycles through phases with predetermined timing intervals</li>
                      <li>Configurable green, yellow, and red durations for each direction</li>
                      <li>Consistent cycle lengths regardless of traffic conditions</li>
                    </ul>
                  </div>
                  
                  <div class="detail-section">
                    <h5>Key Parameters</h5>
                    <ul>
                      <li><strong>Cycle Time:</strong> Total duration of all phases</li>
                      <li><strong>Phase Duration:</strong> Time for each movement pattern</li>
                      <li><strong>Phase Variation:</strong> Optional randomness in timing</li>
                    </ul>
                  </div>
                  
                  <div class="detail-section">
                    <h5>Best For</h5>
                    <ul>
                      <li>Consistent traffic patterns throughout the day</li>
                      <li>Balanced traffic flows from all directions</li>
                      <li>Grid-like networks with predictable demand</li>
                      <li>Situations requiring timing coordination between intersections</li>
                    </ul>
                  </div>
                </div>
              </div>
              
              <div class="model-content" id="adaptive-timing">
                <h4>Adaptive Timing Strategy</h4>
                <div class="model-icon">üß†</div>
                <p>The Adaptive Timing strategy dynamically adjusts signal timings based on real-time traffic conditions, optimizing flow through continuous monitoring and response.</p>
                
                <div class="model-details">
                  <div class="detail-section">
                    <h5>How It Works</h5>
                    <ul>
                      <li>Monitors queue lengths, wait times, and vehicle flows</li>
                      <li>Extends green phases for directions with heavy traffic</li>
                      <li>Shortens phases for directions with minimal demand</li>
                      <li>Implements emergency interventions for critical congestion</li>
                    </ul>
                  </div>
                  
                  <div class="detail-section">
                    <h5>Key Parameters</h5>
                    <ul>
                      <li><strong>Min/Max Phase Duration:</strong> Timing constraints</li>
                      <li><strong>Traffic Sensitivity:</strong> Responsiveness to conditions</li>
                      <li><strong>Queue Weight:</strong> Importance of queue length</li>
                      <li><strong>Fairness Weight:</strong> Balance between efficiency and equity</li>
                    </ul>
                  </div>
                  
                  <div class="detail-section">
                    <h5>Best For</h5>
                    <ul>
                      <li>Variable traffic patterns with peak periods</li>
                      <li>Imbalanced approaches (busy main road, quiet side streets)</li>
                      <li>Networks with unpredictable demand fluctuations</li>
                      <li>Areas requiring rapid response to changing conditions</li>
                    </ul>
                  </div>
                </div>
              </div>
              
              <div class="model-content" id="traffic-enforcer">
                <h4>Traffic Enforcer Strategy</h4>
                <div class="model-icon">üëÆ</div>
                <p>The Traffic Enforcer strategy simulates a human traffic officer making intelligent decisions in real-time, with the ability to handle complex scenarios and prioritize movements based on multiple factors.</p>
                
                <div class="model-details">
                  <div class="detail-section">
                    <h5>How It Works</h5>
                    <ul>
                      <li>Makes decisions at regular intervals based on comprehensive traffic state</li>
                      <li>Evaluates conflict matrices to ensure safe movement combinations</li>
                      <li>Prioritizes directions based on congestion scores and wait times</li>
                      <li>Considers fairness to prevent perpetual starvation</li>
                    </ul>
                  </div>
                  
                  <div class="detail-section">
                    <h5>Key Parameters</h5>
                    <ul>
                      <li><strong>Decision Interval:</strong> Frequency of control updates</li>
                      <li><strong>Priority Threshold:</strong> When to prioritize congested approaches</li>
                      <li><strong>Emergency Threshold:</strong> Critical congestion trigger point</li>
                      <li><strong>Minimum Green Time:</strong> Safety constraint for movements</li>
                    </ul>
                  </div>
                  
                  <div class="detail-section">
                    <h5>Best For</h5>
                    <ul>
                      <li>Complex or unusual intersection geometries</li>
                      <li>Highly variable traffic with unpredictable patterns</li>
                      <li>Special events or temporary conditions</li>
                      <li>Situations requiring human-like judgment and flexibility</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Key Performance Metrics -->
        <div class="kpi-section">
          <div class="section-content">
            <h2>Key Performance Metrics</h2>
            <p class="section-description">Understanding traffic performance measurement in the simulator</p>
            
            <div class="kpi-categories">
              <div class="kpi-category">
                <h4>Traffic Flow Metrics</h4>
                <div class="kpi-cards">
                  <div class="kpi-card">
                    <h5>Average Speed</h5>
                    <div class="kpi-icon">üèéÔ∏è</div>
                    <p>The mean velocity of all vehicles in the network, measured in meters per second.</p>
                    <div class="calculation-info">
                      <strong>How it's calculated:</strong> Total of all vehicle speeds divided by the number of vehicles, sampled at regular intervals.
                    </div>
                  </div>
                  
                  <div class="kpi-card">
                    <h5>Throughput</h5>
                    <div class="kpi-icon">üö∂</div>
                    <p>The number of vehicles that successfully complete their journey through the network per unit time.</p>
                    <div class="calculation-info">
                      <strong>How it's calculated:</strong> Count of vehicles exiting the simulation divided by elapsed simulation time (in minutes).
                    </div>
                  </div>
                  
                  <div class="kpi-card">
                    <h5>Average Wait Time</h5>
                    <div class="kpi-icon">‚åõ</div>
                    <p>The average time vehicles spend stopped or moving below threshold speed.</p>
                    <div class="calculation-info">
                      <strong>How it's calculated:</strong> Total waiting time for all vehicles divided by the number of vehicles, with waiting defined as speed below 0.5 m/s.
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="kpi-category">
                <h4>Congestion Indicators</h4>
                <div class="kpi-cards">
                  <div class="kpi-card">
                    <h5>Congestion Index</h5>
                    <div class="kpi-icon">üìà</div>
                    <p>A composite score from 0 to 1 indicating overall network congestion severity.</p>
                    <div class="calculation-info">
                      <strong>How it's calculated:</strong> Weighted combination of queue lengths (40%), stopped vehicles ratio (30%), and speed reduction factor (30%).
                    </div>
                  </div>
                  
                  <div class="kpi-card">
                    <h5>Queue Metrics</h5>
                    <div class="kpi-icon">üìè</div>
                    <p>Measurements of vehicle queues at intersections and along road segments.</p>
                    <div class="calculation-info">
                      <strong>How it's calculated:</strong> Tracks maximum and average queue lengths, formation and dissipation events, and total queue time across all locations.
                    </div>
                  </div>
                  
                  <div class="kpi-card">
                    <h5>Vehicle Density</h5>
                    <div class="kpi-icon">üöó</div>
                    <p>Number of vehicles per kilometer of road, indicating traffic concentration.</p>
                    <div class="calculation-info">
                      <strong>How it's calculated:</strong> Vehicle count on a road segment divided by segment length in kilometers, sampled at regular intervals.
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="kpi-category">
                <h4>Environmental & Service Quality</h4>
                <div class="kpi-cards">
                  <div class="kpi-card">
                    <h5>Emissions</h5>
                    <div class="kpi-icon">üå±</div>
                    <p>Environmental impact measures including CO‚ÇÇ, NOx, and particulate matter.</p>
                    <div class="calculation-info">
                      <strong>How it's calculated:</strong> Vehicle Specific Power (VSP) model based on vehicle speed, acceleration, and time spent in different driving modes.
                    </div>
                  </div>
                  
                  <div class="kpi-card">
                    <h5>Level of Service</h5>
                    <div class="kpi-icon">üèÜ</div>
                    <p>Industry-standard A-F grading of traffic quality based on Highway Capacity Manual standards.</p>
                    <div class="calculation-info">
                      <strong>How it's calculated:</strong> Letter grades assigned based on average delay times: A (‚â§10s), B (‚â§20s), C (‚â§35s), D (‚â§55s), E (‚â§80s), F (>80s).
                    </div>
                  </div>
                  
                  <div class="kpi-card">
                    <h5>Stop Frequency</h5>
                    <div class="kpi-icon">üõë</div>
                    <p>Average number of stops per vehicle journey, indicating flow smoothness.</p>
                    <div class="calculation-info">
                      <strong>How it's calculated:</strong> Total stop events divided by the number of vehicles that have completed their journey.
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Additional Functionalities -->
        <div class="features-section">
          <div class="section-content">
            <h2>Additional Functionalities</h2>
            <div class="features-grid">
              <div class="feature">
                <div class="feature-icon">üîÑ</div>
                <h4>Batch Simulation</h4>
                <p>Run multiple simulation variations automatically to compare different traffic control strategies.</p>
              </div>
              
              <div class="feature">
                <div class="feature-icon">üì±</div>
                <h4>Responsive UI</h4>
                <p>Manage your traffic simulations on any device with our fully responsive interface.</p>
              </div>
              
              <div class="feature">
                <div class="feature-icon">üìä</div>
                <h4>Data Export</h4>
                <p>Export simulation results in CSV and JSON formats for external analysis and reporting.</p>
              </div>
              
              <div class="feature">
                <div class="feature-icon">üîß</div>
                <h4>Parameter Tuning</h4>
                <p>Fine-tune vehicle behavior, traffic patterns, and control strategies with detailed parameters.</p>
              </div>
              
              <div class="feature">
                <div class="feature-icon">üéÆ</div>
                <h4>Manual Control</h4>
                <p>Take direct control of traffic signals in real-time to test manual intervention scenarios.</p>
              </div>
              
              <div class="feature">
                <div class="feature-icon">üì∑</div>
                <h4>Screenshot & Recording</h4>
                <p>Capture simulation screenshots and record videos to document your findings.</p>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Modal Popup -->
        <div id="modal-overlay" class="modal-overlay">
          <div class="modal-content">
            <span class="close-modal">&times;</span>
            <div class="modal-body" id="modal-body"></div>
          </div>
        </div>
      
      <style>
        .home-page {
          min-height: 100vh;
          background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
          color: #ffffff;
          overflow-y: auto;
          position: relative;
          z-index: 5;
        }
        
        .hero-section {
          padding: 60px 40px;
          text-align: center;
          background: rgba(0, 0, 0, 0.3);
        }
        
        .hero-content h1 {
          font-size: 3.5rem;
          margin-bottom: 20px;
          background: linear-gradient(45deg, #375a7f, #00bc8c);
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
          background-clip: text;
        }
        
        .recent-section, .modules-section, .control-models-section, .kpi-section, .features-section {
          padding: 50px 40px;
        }
        
        .modules-section {
          background: rgba(0, 0, 0, 0.2);
        }
        
        .control-models-section {
          background: rgba(0, 0, 0, 0.3);
        }
        
        .kpi-section {
          background: rgba(0, 0, 0, 0.2);
        }
        
        .features-section {
          background: rgba(0, 0, 0, 0.3);
        }
        
        .section-content {
          max-width: 1200px;
          margin: 0 auto;
        }
        
        .section-content h2 {
          font-size: 2rem;
          margin-bottom: 30px;
          text-align: center;
          position: relative;
        }
        
        .section-content h2::after {
          content: '';
          display: block;
          width: 60px;
          height: 3px;
          background: linear-gradient(90deg, #375a7f, #00bc8c);
          margin: 15px auto 0;
        }
        
        /* Recent Layouts */
        .recent-layouts {
          display: flex;
          flex-wrap: wrap;
          gap: 20px;
          justify-content: center;
        }
        
        .layout-card {
          width: 300px;
          background: rgba(45, 45, 45, 0.8);
          border-radius: 8px;
          overflow: hidden;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
          border: 1px solid #404040;
          padding: 20px;
          transition: transform 0.3s, box-shadow 0.3s;
        }
        
        .layout-card:hover {
          transform: translateY(-5px);
          box-shadow: 0 8px 15px rgba(0, 0, 0, 0.4);
        }
        
        .layout-info h4 {
          margin: 0 0 10px 0;
          font-size: 1.2rem;
          color: #ffffff;
        }
        
        .layout-info p {
          margin: 0 0 15px 0;
          color: #b0b0b0;
          font-size: 0.9rem;
        }
        
        .layout-actions {
          display: flex;
          gap: 10px;
          margin-top: 15px;
        }
        
        .empty-state {
          text-align: center;
          padding: 40px;
          background: rgba(45, 45, 45, 0.8);
          border-radius: 8px;
          border: 1px dashed #404040;
        }
        
        .empty-icon {
          font-size: 3rem;
          margin-bottom: 20px;
          opacity: 0.6;
        }
        
        /* Module Cards */
        .module-grid {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
          gap: 30px;
          margin-top: 20px;
        }
        
        .module-card {
          background: rgba(45, 45, 45, 0.8);
          border-radius: 8px;
          padding: 25px;
          transition: transform 0.3s;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
          position: relative;
          overflow: hidden;
        }
        
        .module-card:hover {
          transform: translateY(-5px);
          box-shadow: 0 8px 15px rgba(0, 0, 0, 0.4);
        }
        
        .module-icon {
          font-size: 2.5rem;
          margin-bottom: 15px;
          text-align: center;
        }
        
        .module-card h3 {
          margin: 0 0 10px 0;
          color: #ffffff;
          text-align: center;
        }
        
        .module-card p {
          margin: 0 0 20px 0;
          color: #b0b0b0;
        }
        
        .learn-more-btn {
          padding: 8px 16px;
          background: linear-gradient(45deg, #375a7f, #4a6fa5);
          color: white;
          border: none;
          border-radius: 4px;
          cursor: pointer;
          transition: all 0.3s ease;
          display: block;
          margin: 0 auto;
          font-weight: 500;
        }
        
        .learn-more-btn:hover {
          background: linear-gradient(45deg, #4a6fa5, #375a7f);
          transform: translateY(-2px);
        }
        
        .modal-data {
          display: none;
        }
        
        /* Traffic Control Models */
        .section-description {
          text-align: center;
          color: #cccccc;
          margin: -15px auto 30px;
          max-width: 700px;
        }
        
        .control-model-container {
          background: rgba(45, 45, 45, 0.8);
          border-radius: 12px;
          overflow: hidden;
          margin-top: 30px;
        }
        
        .model-tabs {
          display: flex;
          background: #2d2d2d;
          border-bottom: 1px solid #404040;
        }
        
        .tab-btn {
          flex: 1;
          padding: 15px 20px;
          background: transparent;
          border: none;
          color: #cccccc;
          cursor: pointer;
          transition: all 0.3s;
          font-size: 1rem;
        }
        
        .tab-btn:hover {
          background: rgba(255, 255, 255, 0.05);
        }
        
        .tab-btn.active {
          background: rgba(55, 90, 127, 0.5);
          color: white;
          border-bottom: 3px solid #375a7f;
        }
        
        .model-content {
          padding: 30px;
          display: none;
        }
        
        .model-content.active {
          display: block;
        }
        
        .model-content h4 {
          margin-top: 0;
          font-size: 1.5rem;
          text-align: center;
          margin-bottom: 20px;
        }
        
        .model-icon {
          text-align: center;
          font-size: 2.5rem;
          margin-bottom: 20px;
        }
        
        .model-content > p {
          text-align: center;
          max-width: 700px;
          margin: 0 auto 30px;
          color: #cccccc;
          line-height: 1.6;
        }
        
        .model-details {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
          gap: 30px;
          margin-top: 30px;
        }
        
        .detail-section {
          background: rgba(35, 35, 35, 0.7);
          border-radius: 8px;
          padding: 20px;
          border: 1px solid #404040;
        }
        
        .detail-section h5 {
          margin-top: 0;
          margin-bottom: 15px;
          color: #00bc8c;
        }
        
        .detail-section ul {
          margin: 0;
          padding-left: 20px;
        }
        
        .detail-section li {
          margin-bottom: 8px;
          color: #cccccc;
        }
        
        /* KPI Section */
        .kpi-categories {
          display: flex;
          flex-direction: column;
          gap: 40px;
        }
        
        .kpi-category h4 {
          text-align: center;
          margin-bottom: 25px;
          color: #00bc8c;
          font-size: 1.4rem;
        }
        
        .kpi-cards {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
          gap: 30px;
        }
        
        .kpi-card {
          background: rgba(45, 45, 45, 0.8);
          border-radius: 8px;
          padding: 25px;
          border: 1px solid #404040;
          transition: transform 0.3s;
        }
        
        .kpi-card:hover {
          transform: translateY(-5px);
          box-shadow: 0 8px 15px rgba(0, 0, 0, 0.4);
        }
        
        .kpi-icon {
          font-size: 2rem;
          margin-bottom: 15px;
          text-align: center;
        }
        
        .kpi-card h5 {
          margin: 0 0 15px 0;
          font-size: 1.2rem;
          color: #ffffff;
          text-align: center;
        }
        
        .kpi-card p {
          color: #cccccc;
          margin-bottom: 15px;
          line-height: 1.5;
        }
        
        .calculation-info {
          background: rgba(35, 35, 35, 0.7);
          padding: 12px;
          border-radius: 6px;
          font-size: 0.9rem;
          color: #b0b0b0;
          margin-top: 15px;
          border-left: 3px solid #375a7f;
        }
        
        /* Features Grid */
        .features-grid {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
          gap: 30px;
          margin-top: 30px;
        }
        
        .feature {
          background: rgba(45, 45, 45, 0.8);
          border-radius: 8px;
          padding: 25px;
          text-align: center;
          transition: transform 0.3s;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }
        
        .feature:hover {
          transform: translateY(-5px);
        }
        
        .feature-icon {
          font-size: 2.5rem;
          margin-bottom: 20px;
        }
        
        .feature h4 {
          margin: 0 0 15px 0;
          color: #ffffff;
        }
        
        .feature p {
          margin: 0;
          color: #b0b0b0;
        }
        
        /* Modal Popup Styles */
        .modal-overlay {
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(0, 0, 0, 0.7);
          display: none;
          justify-content: center;
          align-items: center;
          z-index: 1000;
          backdrop-filter: blur(3px);
        }
        
        .modal-content {
          background: #2d2d2d;
          color: #ffffff;
          width: 80%;
          max-width: 700px;
          max-height: 80vh;
          border-radius: 10px;
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
          overflow: auto;
          position: relative;
          animation: modalFadeIn 0.3s ease-out;
        }
        
        @keyframes modalFadeIn {
          from { opacity: 0; transform: translateY(-20px); }
          to { opacity: 1; transform: translateY(0); }
        }
        
        .close-modal {
          position: absolute;
          top: 15px;
          right: 20px;
          font-size: 28px;
          font-weight: bold;
          color: #b0b0b0;
          cursor: pointer;
          transition: color 0.2s;
        }
        
        .close-modal:hover {
          color: #ffffff;
        }
        
        .modal-body {
          padding: 30px;
        }
        
        .modal-body h3 {
          margin-top: 0;
          color: #ffffff;
          margin-bottom: 20px;
          padding-bottom: 10px;
          border-bottom: 1px solid #404040;
        }
        
        .modal-body p {
          margin: 15px 0;
          line-height: 1.6;
          color: #cccccc;
        }
        
        .modal-body ul {
          margin: 15px 0;
          padding-left: 20px;
        }
        
        .modal-body li {
          margin-bottom: 10px;
          color: #cccccc;
        }
        
        .modal-body strong {
          color: #00bc8c;
        }
        
        /* Custom CSS to remove white box borders */
        .recent-section, .modules-section, .control-models-section, .kpi-section, .features-section {
          border: none;
          box-shadow: none;
        }
        
        .section-content {
          border: none;
          box-shadow: none;
        }
        
        /* Media Queries */
        @media (max-width: 768px) {
          .hero-content h1 {
            font-size: 2.5rem;
          }
          
          .feature-cards {
            flex-direction: column;
          }
          
          .feature-card {
            margin-bottom: 20px;
          }
          
          .model-tabs {
            flex-direction: column;
          }
          
          .model-content {
            padding: 20px 15px;
          }
          
          .recent-section, .modules-section, .control-models-section, .kpi-section, .features-section {
            padding: 40px 20px;
          }
        }
        
        .hero-subtitle {
          font-size: 1.2rem;
          margin-bottom: 40px;
          color: #cccccc;
          max-width: 600px;
          margin-left: auto;
          margin-right: auto;
        }
        
        .btn {
          padding: 12px 24px;
          border: none;
          border-radius: 6px;
          font-size: 1rem;
          cursor: pointer;
          transition: all 0.3s ease;
          text-decoration: none;
          display: inline-block;
          min-width: 150px;
          position: relative;
          z-index: 10;
          pointer-events: auto;
          font-weight: 500;
        }
        
        .btn:active {
          transform: translateY(1px);
          opacity: 0.9;
        }
        
        .btn-primary {
          background: linear-gradient(45deg, #375a7f, #4a6fa5);
          color: white;
        }
        
        .btn-primary:hover {
          background: linear-gradient(45deg, #4a6fa5, #375a7f);
          transform: translateY(-2px);
          box-shadow: 0 5px 15px rgba(55, 90, 127, 0.4);
        }
        
        .btn-secondary {
          background: linear-gradient(45deg, #00bc8c, #00d4aa);
          color: white;
        }
        
        .btn-secondary:hover {
          background: linear-gradient(45deg, #00d4aa, #00bc8c);
          transform: translateY(-2px);
          box-shadow: 0 5px 15px rgba(0, 188, 140, 0.4);
        }
        
        /* Make buttons more clickable */
        .btn-sm {
          padding: 8px 16px;
          font-size: 0.9rem;
          min-width: 100px;
        }
        
        /* Ensure buttons are fully clickable */
        #go-to-builder, #go-to-simulation {
          position: relative;
          z-index: 100;
        }
        
        /* Extra body class when modal is open */
        body.modal-open {
          overflow: hidden;
        }
      </style>
    `;
  }
}
